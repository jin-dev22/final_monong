<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- #7.1. 암호화처리 빈 등록 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<beans:bean id="customSuccessHandler" class="com.kh.security.handler.CustomSuccessHandler"></beans:bean>
	<!-- #7.3. 인증 /권한 관련 설정 -->
	<http security="none" pattern="/resources/**"/>
	
	
	<http auto-config="true">
		<intercept-url pattern="/" access="permitAll"/>
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/notification/popup.jsp" access="permitAll"/> <!-- 주간채소공지 팝업 -->
		<intercept-url pattern="/notification/popup/**" access="permitAll"/> <!-- 주간채소공지 팝업 -->
		<intercept-url pattern="/direct/directProductDetail" access="permitAll"/>
		<intercept-url pattern="/direct/directProductList.do" access="permitAll"/>
		<intercept-url pattern="/member/memberEnroll.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/sellerEnroll.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberLogin.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberIdSearchForm.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberPwSearchForm.do" access="isAnonymous()"/>
		<intercept-url pattern="/member/memberCheckForm.do" access="isAuthenticated()"/>
		<intercept-url pattern="/member/memberUpdate.do" access="hasAnyRole('ROLE_ADMIN','ROLE_MEMBER')"/>
		<intercept-url pattern="/member/memberLogout.do" access="permitAll"/>
		<intercept-url pattern="/member/checkIdDuplicate.do" access="permitAll"/>
		<intercept-url pattern="/member/checkEmailDuplicate.do" access="permitAll"/>
		<intercept-url pattern="/member/sendEmailKey.do" access="permitAll"/>
		<intercept-url pattern="/member/checkEmailKey.do" access="permitAll"/>
		<intercept-url pattern="/member/seller*" access="hasRole('ROLE_SELLER')"/>
		<intercept-url pattern="/member/**" access="hasAnyRole('ROLE_MEMBER','ROLE_SELLER')"/>
		<!-- <intercept-url pattern="/inquire/**" access="isAuthenticated()"/> -->
		<intercept-url pattern="/direct/**" access="permitAll"/>
		<intercept-url pattern="/subscribe/subscribeMain.do" access="permitAll"/>
		<intercept-url pattern="/subscribe/subscribeReviewList.do" access="permitAll"/>
		<intercept-url pattern="/subscribe/subscribeReviewDetail.do" access="permitAll"/>
		<intercept-url pattern="/common/**" access="permitAll"/>
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
		<intercept-url pattern ="/**" access="isAuthenticated()"/>
		
		<!-- <form-login 
			login-page="/member/memberLogin.do" 
			login-processing-url="/member/memberLogin.do" 
			default-target-url="/" 
			always-use-default-target="false" 
			username-parameter="memberId" 
			password-parameter="memberPassword" 
			authentication-success-forward-url="/member/memberLoginSuccess.do"/> -->
		
		
		<form-login 
			login-page="/member/memberLogin.do" 
			login-processing-url="/member/memberLogin.do" 
			default-target-url="/" 
			always-use-default-target="false" 
			username-parameter="memberId" 
			password-parameter="memberPassword" 
			authentication-success-handler-ref="customSuccessHandler"/>

		
		<logout logout-url="/member/memberLogout.do" logout-success-url="/"/>
		
		<csrf disabled="false"/>
		
		<!-- 
			remember me 설정 
			- token-validity-seconds : 유효기간 초단위로 관리. 60*60*24*14 = 2주
			일단 똑같이 2주로 설정해둘께요?
			-->
		<remember-me 
			data-source-ref="dataSource"
			token-validity-seconds="1209600"/>
		<access-denied-handler
			error-page="/error/accessDenied.do"/>
	</http>	
	
	<authentication-manager>
		<authentication-provider user-service-ref="memberSecurityService">
			<password-encoder ref="bcryptPasswordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<!-- @Service 클래스를 빈으로 등록 -->
	<context:component-scan base-package="com.kh.security" />
	
</beans:beans>
